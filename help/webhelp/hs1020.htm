<HTML><HEAD>
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=windows-1252">
	<TITLE>Calculation details (1)</TITLE>
	<META NAME="VIEWPORT" CONTENT="width=device-width">
	<META NAME="KEYWORDS" CONTENT="Applied methods and algoritms;calculation;filtering;flatness;flattened area;Gamma analysis;Ionisatio to Dose conversion;relative flatness;symmetry;">
	<META NAME="AUTHOR" CONTENT="Theo van Soest">
	<META NAME="GENERATOR" CONTENT="HelpScribble 8.3.0">
	<STYLE> span { display: inline-block; }</STYLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">
<P><FONT FACE="Arial" SIZE="2">
<A HREF="manual.htm">Contents</A>
 - <A HREF="idx.htm">Index</A>
 - <A HREF="hs10.htm">Previous</A>
 - <A HREF="hs12.htm">Next</A>
</FONT><HR></P>
<FONT FACE="Arial" COLOR="#0000FF" SIZE="5"><B>Calculation details</B></FONT><FONT FACE="Arial" COLOR="#800000" SIZE="5"><B><HR></B></FONT><BR>
<FONT FACE="Arial" COLOR="#800000" SIZE="1"><I>general information&nbsp;</I></FONT><BR>
<FONT FACE="Arial" SIZE="2"><B>General remarks</B></FONT><BR>
<FONT FACE="Arial" SIZE="2">The Omnipro software allows measuring points at irregular positions. Moreover, the measuring speed an therefore the measurement point density may be changed during a scan. This implicates that nowhere a regular interval may be expected which complicates all calculations severely. On this page relevant calculation details are explained and shown in (slightly simplified) Delphi code.</FONT><BR>
<BR>
<FONT FACE="Arial" COLOR="#800000" SIZE="2"><A NAME="detailslist"></A></FONT><FONT FACE="Arial" SIZE="2">Contents of this page:</FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1020.htm#datastructures">data structures</A></FONT><BR>
<FONT FACE="Arial" COLOR="#800000" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1020.htm#prepareprofile">data preparation</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1030.htm#filtering">filtering and derivative</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#references">reference curves</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#analysis">curve analysis</A></FONT><BR>
<FONT FACE="Arial" COLOR="#800000" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#generalstrategy">general strategy</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#normalisationofprofiles">normalisation of AB/GT-scans</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#normalisationofdepthdose">normalisation of depth dose scans</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#symmetrycorrection">symmetry correction of profiles</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#d50">profile evaluation</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#penumbra_evaluation">penumbra evaluation</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#flattenedarea">In-Field area</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#wedgefield">wedge field detection</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#flatness">flatness</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1025.htm#gamma">gamma analysis</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#symmetry">symmetry</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp; </FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1022.htm#linacerror">linac symmetry error</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1030.htm#matchingcode">matching (incomplete) profiles</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1030.htm#mergingcode">merging partial profiles</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1030.htm#quadfit">quadratic fits</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1025.htm#OD2dose">OD to dose conversion</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1025.htm#ion2dose">Ionisation to dose conversion</A></FONT><BR>
<FONT FACE="Arial" SIZE="2">&nbsp;</FONT><FONT FACE="Arial" SIZE="2"><A HREF="hs1025.htm#mayneordcode">Mayneord transform</A></FONT><BR>
<FONT FACE="Arial" COLOR="#800000" SIZE="2">&nbsp;</FONT><BR>
<BR>
<FONT FACE="Arial" COLOR="#800000" SIZE="2"><B><A NAME="datastructures"></A></B></FONT><FONT FACE="Arial" SIZE="2"><B>Essential data structures</B></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{ ************OVERVIEW OF FILE RECOGNITION RULES*******************************</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----IBA binary rfb format (as file from disk only)----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with a P-type string of the version of the file.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;The string itself starts with "Version:". The first byte is the length of the string.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;In all investigated versions this was 14 ($0e). The next two bytes represent the integer type for the number of scangroups and, after a spacing of 6 bytes, the untyped string of 5 characters " CBEAM" should be detected for a valid header.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;0E 56 65 72 73 69 6F 6E 3A 36 2E 36 2E 32 36</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;&nbsp;&nbsp;&nbsp; V&nbsp; e&nbsp; r&nbsp; s&nbsp; i&nbsp; o&nbsp; n&nbsp; :&nbsp; 6&nbsp; .&nbsp; 6&nbsp; .&nbsp; 2&nbsp; 6</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;01 00&nbsp;&nbsp; FF FF&nbsp;&nbsp; 01 00 05 00&nbsp; 43 42 65 61 6D</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;int(1) $FF$FF&nbsp;&nbsp; (?&nbsp; ?&nbsp; ?&nbsp; ?)&nbsp; C&nbsp; B&nbsp; E&nbsp; A&nbsp; M</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----IBA Wellhöfer v6----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Clinic:'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----IBA Wellhöfer v7----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with a date and time where both '-' and '/' are acceptable as separator in the date.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;When all digits are represented with n, the pattern 'n/nnnn nn:nn:nn' or 'n/nnnn n:nn:nn' should be found to start within the first five characters in the text.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;The AM/PM format is also supported here.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Sun Nuclear disk file----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Tab-Delimited Scan Output'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Sun Nuclear clipboard format----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Delivery System'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----WMS binary----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with the binary representation of the file header size (588). The first integer in the header should be 6..</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;4C 02&nbsp;&nbsp;&nbsp;&nbsp; 06 00</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;int(588)&nbsp; int(6)</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----WMS ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with a double quoted file name with the extension '.wda' or '.wtx': '"xxxxxxx.wxx"' or a double quoted date string '"dd-mmm-yy"'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----RFA ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with ':SYS'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----MCC ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'BEGIN_SCAN_DATA'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Elekta CMS ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with '00001090'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----generic ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;The file should contain two colums of data values without any header, interpreted as position and dose.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Varian W2CAD ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;The string '$STOM' should be found somewhere in beginning of the file.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Reads a maximum of 255 bytes to validate this.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----HDF ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with '# Track:'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Pips ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Type of Cross-Section:'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Schuster ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Profile measured on '.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----SunNuclear ICprofiler ascii (export)----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Filename'</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>************ AXIS CONVENTION RULES ******************</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>For the TWellhoferData class the internal measurement axis in linac coordinates</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>is from G to T, from A to B and from Up to Down.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>In most data types, read with TRadthData derived classes, represent the coordinates in</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>a linac coordinate system. Often the GT axis is inversed however. The mephysto data type</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>and OmniPro data types do also give the orientation of the XYZ tank coordinate system in</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>the header.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>Most of the import data types represent the data as given in the original file format.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>The appropriate TWellhoferData.ImportXXXProfile should set full 3D coordinates in the</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>TWellhoferData convention. The TWellhoferData.PrepareProfile procedure will extract 1D</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>positions for each data point from the 3D coordinates.}</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{13/07/2015 Unrelated curve added</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp; Unrelated may keep any data and is not cleared through any routine at read time.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp; It may be used to store raw reference data when not locked.}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{21/07/2015 RefOrg added.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp; Separate storage space for reference original (not resampled) data}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{09/06/2016 dSigmoid added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{22/07/2016 twDefCenterType added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{15/11/2016 twCenterUseType added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{03/12/2016 twIgnoreParams,twIgnoreSet added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{27/12/2017 MeasFiltered added to datasources}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{26/01/2018 dsRefFiltered added to datasources}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{28/01/2018 twcCoupledSources}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{06/12/2018 twWellhoferAscii_v8}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{17/06/2020 dSigmoid50 added to twDoseLevel}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{21/06/2020 added twSigmoidType}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{20/07/2020 added twcFieldClass}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{21/07/2020 added fcWedge}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{18/08/2020 added fcMRlinac}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>type</B></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{ ************OVERVIEW OF FILE RECOGNITION RULES*******************************</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----IBA binary rfb format (as file from disk only)----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with a P-type string of the version of the file.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;The string itself starts with "Version:". The first byte is the length of the string.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;In all investigated versions this was 14 ($0e). The next two bytes represent the integer type for the number of scangroups and, after a spacing of 6 bytes, the untyped string of 5 characters " CBEAM" should be detected for a valid header.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;0E 56 65 72 73 69 6F 6E 3A 36 2E 36 2E 32 36</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;&nbsp;&nbsp;&nbsp; V&nbsp; e&nbsp; r&nbsp; s&nbsp; i&nbsp; o&nbsp; n&nbsp; :&nbsp; 6&nbsp; .&nbsp; 6&nbsp; .&nbsp; 2&nbsp; 6</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;01 00&nbsp;&nbsp; FF FF&nbsp;&nbsp; 01 00 05 00&nbsp; 43 42 65 61 6D</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;int(1) $FF$FF&nbsp;&nbsp; (?&nbsp; ?&nbsp; ?&nbsp; ?)&nbsp; C&nbsp; B&nbsp; E&nbsp; A&nbsp; M</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----IBA Wellhöfer v6----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Clinic:'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----IBA Wellhöfer v7----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with a date and time where both '-' and '/' are acceptable as separator in the date.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;When all digits are represented with n, the pattern 'n/nnnn nn:nn:nn' or 'n/nnnn n:nn:nn' should be found to start within the first five characters in the text.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;The AM/PM format is also supported here.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Sun Nuclear disk file----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Tab-Delimited Scan Output'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Sun Nuclear clipboard format----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Delivery System'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----WMS binary----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with the binary representation of the file header size (588). The first integer in the header should be 6..</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;4C 02&nbsp;&nbsp;&nbsp;&nbsp; 06 00</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;int(588)&nbsp; int(6)</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----WMS ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with a double quoted file name with the extension '.wda' or '.wtx': '"xxxxxxx.wxx"' or a double quoted date string '"dd-mmm-yy"'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----RFA ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with ':SYS'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----MCC ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'BEGIN_SCAN_DATA'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Elekta CMS ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with '00001090'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----generic ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;The file should contain two colums of data values without any header, interpreted as position and dose.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Varian W2CAD ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;The string '$STOM' should be found somewhere in beginning of the file.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Reads a maximum of 255 bytes to validate this.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----HDF ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with '# Track:'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Pips ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Type of Cross-Section:'.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----Schuster ascii----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Profile measured on '.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>----SunNuclear ICprofiler ascii (export)----</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp;Start with 'Filename'</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>************ AXIS CONVENTION RULES ******************</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>For the TWellhoferData class the internal measurement axis in linac coordinates</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>is from G to T, from A to B and from Up to Down.</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>In most data types, read with TRadthData derived classes, represent the coordinates in</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>a linac coordinate system. Often the GT axis is inversed however. The mephysto data type</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>and OmniPro data types do also give the orientation of the XYZ tank coordinate system in</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>the header.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>Most of the import data types represent the data as given in the original file format.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>The appropriate TWellhoferData.ImportXXXProfile should set full 3D coordinates in the</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>TWellhoferData convention. The TWellhoferData.PrepareProfile procedure will extract 1D</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>positions for each data point from the 3D coordinates.}</I></FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{13/07/2015 Unrelated curve added</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp; Unrelated may keep any data and is not cleared through any routine at read time.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp; It may be used to store raw reference data when not locked.}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{21/07/2015 RefOrg added.</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp; Separate storage space for reference original (not resampled) data}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{09/06/2016 dSigmoid added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{22/07/2016 twDefCenterType added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{15/11/2016 twCenterUseType added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{03/12/2016 twIgnoreParams,twIgnoreSet added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{27/12/2017 MeasFiltered added to datasources}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{26/01/2018 dsRefFiltered added to datasources}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{28/01/2018 twcCoupledSources}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{06/12/2018 twWellhoferAscii_v8}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{17/06/2020 dSigmoid50 added to twDoseLevel}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{21/06/2020 added twSigmoidType}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{20/07/2020 added twcFieldClass}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{21/07/2020 added fcWedge}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{18/08/2020 added fcMRlinac}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>type</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcChannels&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(FieldCh,RefCh);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFieldClass&nbsp;&nbsp;&nbsp;&nbsp; =(fcStandard,fcFFF,fcSmall,fcMRlinac,fcWedge);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcEdgeClass&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(fcPrimary,fcFallBack);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFieldShape&nbsp;&nbsp;&nbsp;&nbsp; =(Rectangular,Blocks,MLC,Circular);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcCenterType&nbsp;&nbsp;&nbsp;&nbsp; =(CenterPenumbra,CenterOrigin,CenterMax);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{ordering critical for user interface}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFFFPeakType&nbsp;&nbsp;&nbsp; =(CenterFFFTopModel,CenterFFFSlopes);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{ordering critical for user interface}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcDoseLevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(dLow,dHigh,d20,d50,d80,d90,dUser,dDerivative,dInflection,dSigmoid50,dTemp);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{ordering critical within code and user interface, should be checked if changed}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcPositionUseType=(dUseBorder,dUseDerivative,dUseInflection,dUseSigmoid50,dUseOrigin,dUseMax,dUseFFFtop,dUseFFFslopes,dUseUndefined,dUseConfigured); </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{TAnalyseForm relies on this order, check all code!}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcNMpddFits&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(NM_Primary,NM_Extrapolation);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcAutoCenter&nbsp;&nbsp;&nbsp;&nbsp; =(AC_default,AC_on,AC_off);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcNormalisation&nbsp; =(NormOnCenter,NormOnOrigin,NormOnMax,NormOnInFieldArea);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFieldSizeDesc&nbsp; =(fInplane,fCrossplane);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcModalityChar&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'C'</FONT><FONT FACE="Consolas" SIZE="2">..</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'X'</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcShiftType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(AbsShift,RelShift);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcAnyDataSource&nbsp; =(dsMeasured,dsReference,dsMeasFiltered,dsRefFiltered,dsCalculated,dsBuffer,dsRefOrg,dsUnrelated,dsDefault);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{order is used for coupling}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcTankAxis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(X,Y,Z);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcMeasAxis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(Inplane,Crossplane,Beam);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcScanTypes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(snGT,snAB,snPDD,snAngle,snGenericHorizontal,snFreescan,</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; snGenericProfile,snFanLine,snPlane,snUndefined);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{order of first 3 is critical and assumed in code}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcScalingType&nbsp;&nbsp;&nbsp; =(scNormalised,scAvgNorm,scPlotScaling,scMaximum);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcBeamType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =(Photons,Electrons,Protons,Other);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFloatType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = Double;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//was Extended in Delphi7</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcStartStopType&nbsp; =(Start,Stop);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFloatArray&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFloatArrayPtr&nbsp; = ^twcFloatArray;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcAliasRec&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>record</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twKey,twValue: </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twApplied&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcAliasArray&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcAliasRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcSides&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = (twcLeft,twcRight);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcArrayLimit&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>record</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Calc&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nearest: Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcArrayLimitRec&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>record</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Level&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Penumbra: </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcSides] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcArrayLimit;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcTankAxisChar&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'X'</FONT><FONT FACE="Consolas" SIZE="2">..</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'Z'</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcXYZset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>set</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcTankAxisChar;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcLimitsArray&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcDoseLevel] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcArrayLimitRec;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcOD2doseArray&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">..twcOD2doseNumPar] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFloatType;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcCoordinate&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>record</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>case</B></FONT><FONT FACE="Consolas" SIZE="2"> integer </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">: (m:</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcMeasAxis&nbsp;&nbsp;&nbsp; ] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFloatType);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">: (t:</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcTankAxis&nbsp;&nbsp;&nbsp; ] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFloatType);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">2</FONT><FONT FACE="Consolas" SIZE="2">: (c:</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcTankAxisChar] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFloatType);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">3</FONT><FONT FACE="Consolas" SIZE="2">: (i:</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">..</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">2</FONT><FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFloatType);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcCoordArray&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcCoordinate;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFileType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = (twWellhoferAscii_v6, twWellhoferAscii_v7, twWellhoferAscii_v8, twWellhoferRfb, twWTX,twWDA,</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twGenericProfile&nbsp;&nbsp; , twHdfProfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , twSchusterProfile&nbsp; , twCmsProfile,</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twPipsProfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , twMccProfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , twSNCfileAscii&nbsp;&nbsp;&nbsp;&nbsp; , twSNCclipboard,</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twRFA_ascii&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , twW2CAD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; , twICprofilerAscii&nbsp; , twUnknown);</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcGrafPoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>record</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X,Y: twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; wmsIntType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = SmallInt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{make no changes, needed for binary files, 2 bytes!!}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; wmsRealType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = Single;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{make no changes, needed for binary files, 4 bytes}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; wmsGrafNumType&nbsp;&nbsp;&nbsp; = Double;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{05/05/2020: real48 not needed}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; wmsGrafPoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>record</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X,Y: wmsGrafNumType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; wmsGrafProfile&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> wmsGrafPoint;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcTankAxisID&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>packed</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcMeasAxis&nbsp;&nbsp;&nbsp; ] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcTankAxisChar;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcTankAxisSign&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>packed</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcTankAxisChar] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> wmsIntType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcMeasAxisSign&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>packed</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcMeasAxis&nbsp;&nbsp;&nbsp; ] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> ShortInt;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcMeasAxisStg&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">[</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">3</FONT><FONT FACE="Consolas" SIZE="2">];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFieldDescrArr&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcFieldSizeDesc]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcGantrySetup&nbsp;&nbsp;&nbsp; = (twCW_180_Down,twCCW_180_Down,twCW_180_Up,twCCW_180_Up);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFitModels&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = (pddPhoton,pddPhotonExtrapolation,pddElectron,penumbraSigmoid);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcMultiScanList&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcIgnoreParams&nbsp;&nbsp; = (twiLinac,twiModality,twiEnergy,twiSSD,twiFieldSize,twiWedge,twiDepth,twiDiagonal,twiScanDirection,twiScanClass,twiAngle,twiMeasDivice);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcIgnoreSet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>set</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcIgnoreParams;</FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>const</B></FONT><FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//set definitions</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcMultiFiles&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>set</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFileType =[twRFA_ascii,twMccProfile,twWellhoferRfb,twW2CAD,twICprofilerAscii];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcHoriScans&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>set</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcScanTypes=[snGT,snAB,snAngle,snGenericHorizontal];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcVertScans&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>set</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcScanTypes=[snPDD,snFanLine];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcInherentFormats: </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>set</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFileType =[twWellhoferAscii_v6,twWellhoferAscii_v7,twWellhoferRfb,twSNCfileAscii,twSNCclipboard];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcBinaryFormats&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>set</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFileType =[twWDA,twWellhoferRfb];</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFirstDataSource= dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcLastDataSource = dsUnrelated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcLastRelated&nbsp;&nbsp;&nbsp; = dsBuffer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFilterSources&nbsp; = [dsMeasured&nbsp;&nbsp;&nbsp; ,dsReference&nbsp; ];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcFilteredCopies = [dsMeasFiltered,dsRefFiltered];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcCoupledSources :</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[dsMeasured..dsReference&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcAnyDataSource=(dsMeasFiltered,dsRefFiltered);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twcCoupledFiltered:</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[dsMeasFiltered..dsRefFiltered] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcAnyDataSource=(dsMeasured&nbsp;&nbsp;&nbsp; ,dsReference&nbsp; );</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{13/07/2015 twLocked added}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{20/07/2015 twComposite added}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{06/08/2015 twIsFiltered added}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{01/09/2015 twOriginPosValid added}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{10/12/2015 added twFFFslope, replaced twLeft/RightFlatArr with twInFieldArr[side]}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{12/12/2015 twFFFdetected}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{20/12/2015 twTopModel added, twMinVal removed}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{15/11/2016 added twCenterPosDefUse}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{11/01/2017 added twUsedEdgeLevel}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{14/01/2017 added twSigmoidOffsetCm}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{23/11/2017 added twFlatPosCm,twSymAreaRatio}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{12/01/2018 added twAbsNormConfig to note used info from modlist}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{27/01/2018 twAbsNormDefUse}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{15/05/2020 added twFirstScanPosCm,twLastScanPosCm for convenience}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{22/05/2020 twSigmoidDone}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{21/07/2020 removed twIsWedgedProfile}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{27/08/2020 reintroduced twMaxPosCm,twMaxValue; twTopModel now only used for fitresults of top}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; twCurveDataRec=</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>record</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAbsNormConfig&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{a configured value/position is used to normalise}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAbsNormDefUse&nbsp; : twcPositionUseType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAbsNormPosCm&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAbsNormValue&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAlignedTo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcDataSource; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{profile is shifted to align with other source}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAnalysed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{analys is succesfully completed}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAppliedNormVal : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{use this to override twAbsNormval}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAvgNormValue&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twBackGround&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{background correction value}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twBeamInfo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twBeamDesRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twCenterPosDefUse: twcPositionUseType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twCenterPosCm&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twCenterPosValid : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twCenterArr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twComposite&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{true when twData does not represent the original data}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twConfidenceLimit: twcFloatType; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{gamma analysis}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twCoordinates&nbsp;&nbsp;&nbsp; : twcCoordArray;</FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{stored in measurement coordinates (ICD), conforms with vendors}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twCurveIDString&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{standard description of data to check equivalence}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatArray;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twDataFirst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{see also twScanFirst/Last}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twDataLast&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twDataHistoryStg : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{description of history}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twDevice&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{holds copy of radiation device}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twDerivativeValid: Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twExtraText&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : TStringDynArray;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFastScan&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFFFslope&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcSides] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twFFFslopeRecord;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFFFslopesTop&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFileIDString&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFileName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFilmData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFilterPoints&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFilterString&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFirstDataPosCm : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{twPosCm[twDataFirst]}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFirstScanPosCm : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{twPosCm[twScanFirst]}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFittedData&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twInFieldAreaOk&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twInFieldArr&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcSides] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twInFieldPosCm&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcSides] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFlatness&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twIsDerivative&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twIsDiagonal&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twIsFiltered&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twIsGamma&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twIsRelative&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twLastDataPosCm&nbsp; : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{twPosCm[twDataLast]}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twLastScanPosCm&nbsp; : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{twPosCm[twScanLast]}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twLevelPos&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcLimitsArray;</FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{bordervalues}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twLinSlope&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{slope of data within InField area}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twLocalPeak&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{search for local peak}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twLocked&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{when locked not used for standard routines}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMayneordApplied: Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMaxArr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{always maxpos in twData}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMaxPosCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{might deviate from twMaxArr based value}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMaxValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{might deviate from twMaxArr based value}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMeasTime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMeasDateTime&nbsp;&nbsp; : TDateTime;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMinArr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMirrored&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; tw2DoseConv&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twOD2doseFilm&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twOriginPosValid : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twOriginalFormat : twcFileType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPDD10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPDD20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPddFitData&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcNMpddFits] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twFitRecord;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPlotScaling&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPoints&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPosCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatArray;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPosCmExportSign: wmsIntType;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{on export the original sign, which may be changed by axis flipping, when the position is restored}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008080" SIZE="2">{$IFDEF POSINTEGRAL}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPosIntegral&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008080" SIZE="2">{$ENDIF}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twRelAvgInField&nbsp; : twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//average value within in-field area</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twRelMinInField&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twRelMaxInField&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twRefNormFactor&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twRelNormPosCm&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twRelNormValue&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twResampled&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPosScaling&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//scaling =&gt; twPosScaling:=twSDD2SSDratio/twSSD2NormRatio</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twRelatedSource&nbsp; : twcDataSource;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//CW angle from AB-axis</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanDevice&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanFirst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanLast&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanNr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanLength&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanTypeString : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>String</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSelf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcDataSource;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSetFieldType&nbsp;&nbsp; : twcFieldClass;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twShiftCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSigmoidDone&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSigmoidFitData : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcSides] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twFitRecord;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//fit results are based on raw, unscaled data, but with twSigmoidOffsetCm included</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSSD_cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSDD2SSDratio&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSSD2NormRatio&nbsp; : twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//ratio of used SSD to standard SSD}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSNR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twVector_ICD_cm&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>array</B></FONT><FONT FACE="Consolas" SIZE="2">[twcStartStopType] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><FONT FACE="Consolas" SIZE="2"> twcCoordinate;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twStepSizeCm&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twStepSign&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : SmallInt;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSymCorrected&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSymmetry&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSymLinacError&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSymAreaRatio&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twTag&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twTopModel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : TQuadFitReport;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twUsedDosePoint&nbsp; : twcDoseLevel;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twUsedEdgeLevel&nbsp; : twcDoseLevel;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twWidthCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//width at edge level</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; TWellhoferData=</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>class</B></FONT><FONT FACE="Consolas" SIZE="2">(TRadthData)</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>private</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">(see source code)</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; public {when changing this list, also update procedure PassSettings}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wApplyUserLevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wApplySigmoidToBuffer&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wAutoShiftCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : array[twcMeasAxis] of Extended;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wAxisPreserveOnExport&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wCenterProfiles&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wCenterDefinition&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : array[twcFieldClass] of twcCenterType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wCheckRefCurveString&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wCheckRefIgnoreLinac&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wCurveInfo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twCurveDesRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wDefaultIgnoreSet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcIgnoreSet;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wDetectorInfo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twDetectorDesRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wEdgeDetect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {if set or wedge found, a derivative is calculated for edge detection}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wEdgeFallBackCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {when 50% level differs more, use edge}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wEdgeForce&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {always use edge}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wEdgeMethod&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : array[twcEdgeClass,twcFieldClass] of twcDoseLevel;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wTakeCurrentRefSource&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wEPenumbraH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wEPenumbraL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wFieldTypeDetection&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : array[twcFieldClass] of Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wFFFPeakDef&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFFFPeakType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wFFFMinDoseDifPerc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wFFFMinEdgeDifCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wFullAnalysis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {do limited analysis when false}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wGeneralInfo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twClinicRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wGenericToPDD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wInflectionSigmoidRadiusCm: twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wLinacSymSign&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : array[twcFieldSizeDesc] of ShortInt;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wLinacSymInnerRadiusCm&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wLinacSymOuterRadiusCm&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMeas2TankMapping&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcMeasAxisStg;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMeterInfo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twElectrometerDesRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMultiScanNr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {support for multiple scans per file, see ptw}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMultiScanStep&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {-1 or +1}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMultiScanMax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMultiScanLooping&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wNormalisation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : array[twcFieldClass] of twcNormalisation;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; w2D_ArrayRefList&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : TStringList;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wPipsPixelCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wOutlierFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wRefPoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcCoordinate;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wRefAlignPeak&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wRefAtDefaultSSD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wReferenceFromGeneric&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wRenormaliseData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {renormalise original data to [source]twAbsNormVal}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wResampleData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wSamePositionRadiusCm&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wScaleSDD2SSD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wScale2DefaultSSD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wSmallFieldLimitCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wSmallFieldFilterDivider&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wTopModelRadiusCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : array[twcFieldClass] of twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wWedge90ShiftFactor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //see FastScan</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMRlinacTUlist&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : String;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //see FastScan</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wMeasDeviceInfo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twMeasDeviceRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wSource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : array[twcDataSource] of twCurveDataRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wTryBinaryOnly&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wUserAxisSign&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcMeasAxisSign;&nbsp;&nbsp; {wUserAxisSign is used in PrepareProfile to swap any axis direction to match the users display with other applications}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wwmsHeader&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : wmsFileHeadRec;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wXPenumbraH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wXPenumbraL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">(only selected procedures)</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; IndexMultiScan(AFileName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :String='';</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ACurveIDString&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :String=''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; EvaluateFileType(AIndentString&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :String=''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFileType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetNumPoints&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; override;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetFieldSize(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADirection&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFieldSizeDesc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetPenumbraValue(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADoseLevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASide&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcSides&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType; overload;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetPenumbraValue(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADoseLevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDoseLevel;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASide&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcSides&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType; overload;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetPenumbraValue(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADoseLevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :String;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASide&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcSides&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType; overload;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetPenumbraWidth(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASide&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcSides;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DynamicWidth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean=False&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetFieldWidthCm(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDoseLevel&nbsp; =d50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetFieldCenterCm(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDoseLevel&nbsp; =d50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; BordersValid(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDoseLevel&nbsp; =d50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetLevelDistance(Level1,Level2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDoseLevel;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASide&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcSides;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; FindLevelPos(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDoseLevel&nbsp; =d50;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Symmetric&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): Boolean;&nbsp;&nbsp;&nbsp;&nbsp; //BistroMath core function</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; NearestPosition(Position&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //BistroMath core function</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ForceAlwaysIn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetInterpolatedValue(Position&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //BistroMath core function</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DefaultValue&nbsp;&nbsp; :twcFloatType&nbsp; =0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetQfittedValue(Position&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //BistroMath core function</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DefaultValue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetScaledQfValue(Position&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //BistroMath core function</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RelativeToCenter&nbsp;&nbsp; :Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Scaling&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcScalingType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Ionisation2Dose(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Divide(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADivisor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsReference;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoScaling&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NormFactor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =1;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PreFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PostFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IsRelative&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; SyntheticProfile(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Divisor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsReference;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoScaling&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PreFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PostFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Match(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsReference;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AReference&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ResultType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcShiftType&nbsp; =AbsShift;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoCorrect&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MatchLimitL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MatchLimitR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Integrate(FirstPosCm,LastPosCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UseResampling&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {$IFDEF POSINTEGRAL};</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PositionWeighted&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {$ENDIF}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Derive(cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =twcDefaultValue;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //BistroMath core function</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PreFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Mirror(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ARotationPoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Merge(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsUnrelated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ShiftSourceCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DoMatch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ScaleOverlap&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; SigmoidPenumbraFit(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ApplyModel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; RevLogisticFunction(const a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :TaFunctionVertex;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const Fx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :TaVertexDataType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const shift_cm&nbsp; :twcFloatType=0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): TaVertexDataType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GetNormalisedSigmoidLevel(cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp; :twcDataSource =dsMeasured ): twcFloatType; //autoselect side</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; LogisticFunction(const a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :TaFunctionVertex;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :TaVertexDataType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const shift_cm&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): TaVertexDataType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; ApplySigmoidPenumbraFit(ASource&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination:twcDataSource =dsMeasured ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; GammaAnalysis(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AReference&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsReference;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InFieldAreaOnly&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoScaling&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SourceScaling&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =1;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PreFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PostFilter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; NMpddmodelResult(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AfitVertex&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcNMpddFits;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :TaVertexDataType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): TaVertexDataType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; OD2doseConversion(PreferedModality&nbsp; :String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ='';</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PreferedFilmType&nbsp; :String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ='';</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; ApplyAliasList(AKey&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :string&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ): string;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure Resample(StepCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure Add(ASource1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsReference;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Source2Scaling&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =1);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure Multiply(Factor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure PDDmaxNMFit(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AFit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcNMpddFits&nbsp; =NM_Primary );</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure QfitMaxPos(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ForceFitCenter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Mayneord(SSD_org_cm,SSD_new_cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {zero or negative values are replaced by known data}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dmax_org_cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure QuadFilter(cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =twcDefaultValue;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PostAnalysis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AllowRepeatedFiltering&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ResetBorderValues&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure MedianFilter(cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =twcDefaultValue;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PostAnalysis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AllowRepeatedFiltering :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ResetBorderValues&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure Shift(cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ShiftType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcShiftType&nbsp; =RelShift;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured );</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure AlignCurves(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsReference;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AReference&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured );</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure SubtractBackground(AbsoluteValue&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp; =0;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured );</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure CorrectSymmetry(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PostAnalysis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =True&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure PddFit(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADestination&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsCalculated);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; procedure FastScan(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //BistroMath core function</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; function&nbsp; Analyse(ASource&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcDataSource =dsMeasured;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //BistroMath core function</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AtBorderUserDoseLevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoCenterProfile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcAutoCenter =AC_default ): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; published</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property AcceptMissingPenumbra:Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FNoPenumbraOk&nbsp;&nbsp;&nbsp; write SetNoPenumbraOk&nbsp; default False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property AcceptZeroSteps&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FZeroStepsOk&nbsp;&nbsp;&nbsp;&nbsp; write SetZeroStepsOk&nbsp;&nbsp; default False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property AutoLoadReference&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FAutoLoadRef&nbsp;&nbsp;&nbsp;&nbsp; write SetAutoLoadRef&nbsp;&nbsp; default False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property AlignReference&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FALignRef&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write FAlignRef&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ArrayScanRefOk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FArrayScanRefOk;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ArrayScanRefUse&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FArrayScanRefUse write SetArrayScanRefUse;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property BeamType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property CalcWidth_cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp; read FCalcWidth_cm&nbsp;&nbsp;&nbsp; write SetCalcWidth;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property DetectDiagonalScans&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FDiagonalDetect&nbsp; write FDiagonalDetect&nbsp; default True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property Energy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp; read wSource[dsMeasured].twBeamInfo.twBEnergy;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property FieldGT_cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp; read GetFieldGT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write SetFieldGT;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property FieldAB_cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp; read GetFieldAB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write SetFieldAB;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property FieldLength;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property FieldDepth;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property FileName;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property FilterWidth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp; read FFilterWidth&nbsp;&nbsp;&nbsp;&nbsp; write SetFilterWidth;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property Identity;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property IsValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read wSource[dsMeasured].twValid;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property LastDetectedFileType :twcFiletype&nbsp;&nbsp;&nbsp;&nbsp; read FLastFiletype;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property LastMessage;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ModalityNormList&nbsp;&nbsp;&nbsp;&nbsp; :TModNormList&nbsp;&nbsp;&nbsp; read FModNormList;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ModalityFilmList&nbsp;&nbsp;&nbsp;&nbsp; :TModFilmList&nbsp;&nbsp;&nbsp; read FModFilmList;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ModalityBeamList&nbsp;&nbsp;&nbsp;&nbsp; :TModTextList&nbsp;&nbsp;&nbsp; read FModBeamList;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property MultiRefIndex&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FMultiRefIndex&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write SetMultiRefIndex;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property MatchOverride&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FMatchOverride&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write FMatchOverride&nbsp;&nbsp; default False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property PenumbraHi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp; read FPenumbraH;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property PenumbraLo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp; read FPenumbraL;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property EngineReady&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read GetReady;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ReferenceDirectory&nbsp;&nbsp; :String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read FReferenceDir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write SetReferenceDir;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property RegisteredFileTypes&nbsp; :String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read GetRegisteredFileTypes;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ResampleGridSize&nbsp;&nbsp;&nbsp;&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp; read FResampleGrid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write SetResampleGrid;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ResetFit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Boolean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write FNMreset;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property ScanType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property UserBorderDoseLevel&nbsp; :twcFloatType&nbsp;&nbsp;&nbsp;&nbsp; read FUserLevel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; write SetUserLevel;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property Warning;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property WedgeAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :SmallInt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read wSource[dsMeasured].twBeamInfo.twBWedge;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; property FormatOk;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; end;</FONT><BR>
<BR>
<BR>
<FONT FACE="Arial" SIZE="1"><I><A HREF="hs1020.htm#detailslist">back to top</A></I></FONT><FONT FACE="Arial" COLOR="#800000" SIZE="2"><I></I></FONT><BR>
<BR>
<FONT FACE="Arial" COLOR="#800000" SIZE="2"><B><A NAME="prepareprofile"></A></B></FONT><FONT FACE="Arial" SIZE="2"><B>Data preparation</B></FONT><BR>
<FONT FACE="Arial" SIZE="2">When a curve is read, all supporting parameters are set in the GTABUP coordinate system.&nbsp;</FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>(*</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>****BistroMath core function****</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>coordinates are recalculated as needed on basis wUserAxisSign[mAxis]</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>twStepSize is calculated from coordinates</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>twVector_ICD_cm is setup</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>reference is loaded</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>*)</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{04/06/2015&nbsp; make curvestring again when wMultiScanRefOk=true}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{23/08/2015</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp; dependencies on correct data in Angle moved from SetScanType to here</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>&nbsp; twBSSD_cm removed}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{27/08/2015 strip spaces from wMeasDeviceInfo.twDeviceName}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{29/09/2015 twCurveIDstring:= MakeFilename(True,True,True); added}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{15/12/2015 for multiscanref files the servoname is copied to the detectorname}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{19/03/2016 mathematical approach to shortest distance to origin}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{14/04/2016 local var TankMapping not used consequently}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{02/08/2016 makecurvename}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{16/08/2016 set twCurveIDstring *after* FastScan is done!}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{07/12/2016 if not autoloadref, then try to take reforg}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{14/01/2017 rescaling of extreme data values}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{20/03/2017 range checking and div0 protection}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{29/03/2017 wAutoShiftCm}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{23/10/2017 ScanAngle reviewed, explicite test for 90 degrees}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{03/11/2017 for angle scans: consistent scanangle calculation in OmniPro v6 GTABUD coordinate system}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{12/01/2018 added twAbsNormConfig to note used info from modlist}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{22/02/2018 apply StrTrim to Linac instead of removing anything surrounded by illegal characters}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{26/02/2018 ... but still clip at first space}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{21/08/2018 tmpCoord.m[mAxis]:= twVector_ICD_cm[Stop].m[mAxis]-twVector_ICD_cm[Start].m[mAxis] was calculated before twVector_ICD_cm[nn] was set}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{11/09/2018 swapped relation between scanangle 45/135 and GA/TA}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{02/11/2018 wGenericToPDD handling improved}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{16/11/2018 rescaling for profiles improved}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{16/05/2020 applied FMultiScanCapable}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{27/08/2020 twMaxPosCm, twMaxValue}</I></FONT><BR>
<FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>function</B></FONT><FONT FACE="Consolas" SIZE="2"> TWellhoferData.PrepareProfile: Boolean;</FONT><BR>
<FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>var</B></FONT><FONT FACE="Consolas" SIZE="2"> i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Integer;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; mAxis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcMeasAxis;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; e,vmax&nbsp;&nbsp;&nbsp;&nbsp; : twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; varAxisHex : Byte;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; MeasAxisID : twcTankAxisID;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; tmpCoord&nbsp;&nbsp; : twcCoordinate;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; TankMapping: twcMeasAxisStg;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : twcStartStopType;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>function</B></FONT><FONT FACE="Consolas" SIZE="2"> NotOnCAX(ACoordinate:twcCoordinate): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; Result:= (Abs(ACoordinate.m[Inplane]-</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">)&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.5</FONT><FONT FACE="Consolas" SIZE="2">) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>or</B></FONT><FONT FACE="Consolas" SIZE="2"> (Abs(ACoordinate.m[Crossplane]-</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">)&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.5</FONT><FONT FACE="Consolas" SIZE="2">);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>function</B></FONT><FONT FACE="Consolas" SIZE="2"> FanTangent(ACoordinate:twcCoordinate): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>try</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; Result:= (wSource[dsMeasured].twSSD_cm+ACoordinate.m[Beam])/Max(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.01</FONT><FONT FACE="Consolas" SIZE="2">,VectorLength(ACoordinate.m[Inplane],ACoordinate.m[Crossplane]));</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>except</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; Result:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>function</B></FONT><FONT FACE="Consolas" SIZE="2"> CalcRefPos(aAxis:twcMeasAxis): twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>var</B></FONT><FONT FACE="Consolas" SIZE="2"> deltaZ: twcFloatType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> aAxis=Beam </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; Result:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>with</B></FONT><FONT FACE="Consolas" SIZE="2"> wSource[dsMeasured] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>try</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; deltaZ:= twVector_ICD_cm[Stop ].m[Beam ]-twVector_ICD_cm[Start].m[Beam];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Result:= twVector_ICD_cm[Start].m[aAxis];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> Abs(deltaZ)&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.5</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Result:= Result - twVector_ICD_cm[Start].m[Beam]*(twVector_ICD_cm[Stop].m[aAxis]-twVector_ICD_cm[Start].m[aAxis])/deltaZ;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>except</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Result:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>function</B></FONT><FONT FACE="Consolas" SIZE="2"> EqualPos(ACoordinate:twcCoordinate;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m1,m2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :twcMeasAxis): Boolean;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; Result:= abs(abs(ACoordinate.m[m1])-abs(ACoordinate.m[m2]))&lt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.1</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<BR>
<FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">Inc(FActiveCnt);</FONT><BR>
<FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>with</B></FONT><FONT FACE="Consolas" SIZE="2"> wCurveInfo </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>not</B></FONT><FONT FACE="Consolas" SIZE="2"> FMultiScanCapable </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; wMultiScanNr := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; wMultiScanMax:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; TankMapping:= wMeas2TankMapping;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> (Length(TankMapping)&lt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">3</FONT><FONT FACE="Consolas" SIZE="2">) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>or</B></FONT><FONT FACE="Consolas" SIZE="2"> (Pos(TankMapping,twcMeasAxisPermutations)=</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; TankMapping:= twcMeasAxisStandard;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> mAxis:= Inplane </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> Beam </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; MeasAxisID[mAxis]:= twcTankAxisStandard[Pos(TankMapping[Succ(Ord(mAxis))],twcMeasAxisStandard)];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> ScanAngle&lt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; ScanAngle:= ScanAngle+</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">180</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> wSource[dsMeasured].twBeamInfo.twBModality=</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'E'</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; FPenumbraH:= wEPenumbraH;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; FPenumbraL:= wEPenumbraL;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; FPenumbraH:= wXPenumbraH;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; FPenumbraL:= wXPenumbraL;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; wSource[dsCalculated].twValid:= False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>with</B></FONT><FONT FACE="Consolas" SIZE="2"> wSource[dsMeasured] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> TankMapping&lt;&gt;twcMeasAxisStandard </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> (ScanType&lt;&gt;snPDD) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> (ScanType&lt;&gt;snGenericHorizontal) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twDesScanType:= snUndefined;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmpCoord:= twCoordinates[i];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> mAxis:= Inplane </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> Beam </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twCoordinates[i].c[MeasAxisID[mAxis]]:= tmpCoord.m[mAxis];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> mAxis:= Inplane </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> Beam </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//wUserAxisSign is used to swap any axis to match the users display with other applications</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> wUserAxisSign[mAxis]&lt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twCoordinates[i].m[mAxis]:= -twCoordinates[i].m[mAxis];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> wAutoShiftCm[mAxis]&lt;&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twCoordinates[i].m[mAxis]:= twCoordinates[i].m[mAxis]+wAutoShiftCm[mAxis];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twVector_ICD_cm[Start]:= twCoordinates[twDataFirst];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twVector_ICD_cm[Stop ]:= twCoordinates[twDataLast ];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> mAxis:= Inplane </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> Beam </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//will be used to derive scanangle in OmniPro v6 GTABUD coordinate system</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmpCoord.m[mAxis]:= twVector_ICD_cm[Stop].m[mAxis]-twVector_ICD_cm[Start].m[mAxis];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSSD_cm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := Max(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">,twSSD_cm);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSDD2SSDratio&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := ifthen(abs(twVector_ICD_cm[Start].m[Beam]-twVector_ICD_cm[Stop].m[Beam])&lt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.1</FONT><FONT FACE="Consolas" SIZE="2">,</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">+twVector_ICD_cm[Start].m[Beam]/Max(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">10</FONT><FONT FACE="Consolas" SIZE="2">,Abs(twSSD_cm)),</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPosScaling&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := Max(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.1</FONT><FONT FACE="Consolas" SIZE="2">,ifthen(wScaleSDD2SSD,Max(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">,twSDD2SSDratio),</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">)*ifthen(wScale2DefaultSSD,twSSD_cm/Max(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">10</FONT><FONT FACE="Consolas" SIZE="2">,twcDefaultSSDcm),</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">));</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twResampled&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twSelf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAlignedTo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := dsMeasured;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twConfidenceLimit&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; varAxisHex&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twPosCmExportSign&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> mAxis:= Inplane </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> Beam </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//set refpoint to first datapoint</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twDesVaryingAxis[mAxis]:= Abs(twVector_ICD_cm[Stop ].m[mAxis]-twVector_ICD_cm[Start].m[mAxis])&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.5</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twPosCmExportSign&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := twPosCmExportSign*ifthen(twDesVaryingAxis[mAxis],wUserAxisSign[mAxis],</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wRefpoint.m[mAxis]&nbsp;&nbsp;&nbsp;&nbsp; := ifthen(twDesVaryingAxis[mAxis],</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">,twVector_ICD_cm[Start].m[mAxis]);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Inc(varAxisHex,ifthen(twDesVaryingAxis[mAxis],</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>shl</B></FONT><FONT FACE="Consolas" SIZE="2"> ord(mAxis),</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">));</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> twDesScanType </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>in</B></FONT><FONT FACE="Consolas" SIZE="2"> [snFreeScan,snAngle,snUndefined,snGenericHorizontal,snGenericProfile] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>case</B></FONT><FONT FACE="Consolas" SIZE="2"> varAxisHex </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">: SetScanType(snGT);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">2</FONT><FONT FACE="Consolas" SIZE="2">: SetScanType(snAB);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">3</FONT><FONT FACE="Consolas" SIZE="2">: </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> LineDistance2Origin(twVector_ICD_cm[Start].m[Inplane],twVector_ICD_cm[Start].m[Crossplane],</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twVector_ICD_cm[Stop ].m[Inplane],twVector_ICD_cm[Stop ].m[Crossplane])&lt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.5</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetScanType(snAngle)</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetScanType(snFreeScan);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">4</FONT><FONT FACE="Consolas" SIZE="2">: SetScanType(snPDD);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">5</FONT><FONT FACE="Consolas" SIZE="2">..</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">7</FONT><FONT FACE="Consolas" SIZE="2">: </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> NotOnCAX(twVector_ICD_cm[Start]) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> NotOnCAX(twVector_ICD_cm[Stop ]) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (FanTangent(twVector_ICD_cm[Start])=FanTangent(twVector_ICD_cm[Stop ])) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetScanType(snFanLine)</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetScanType(snFreeScan);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><FONT FACE="Consolas" SIZE="2"> SetScanType(snFreeScan);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twDesScanType:= ScanType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> twDesScanType=snAngle </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> max(abs(twVector_ICD_cm[Start].m[Inplane]),abs(twVector_ICD_cm[Start].m[Crossplane]))&gt;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; max(abs(twVector_ICD_cm[Stop ].m[Inplane]),abs(twVector_ICD_cm[Stop ].m[Crossplane])) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><FONT FACE="Consolas" SIZE="2"> v:= Start</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v:= Stop;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> twVector_ICD_cm[v].m[InPlane]=</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetScanType(snAB);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ScanAngle:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>try</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> tmpCoord.m[InPlane]=</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ScanAngle:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">90</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ScanAngle:= Round(ArcTan(tmpCoord.m[CrossPlane]/tmpCoord.m[InPlane])*</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1800</FONT><FONT FACE="Consolas" SIZE="2">/Pi)/</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">10</FONT><FONT FACE="Consolas" SIZE="2">; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{scanangle in OmniPro v6 GTABUD coordinate system}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> ScanAngle&lt;&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twDesScanType:= snAngle;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>except</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ScanAngle:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> ScanAngle&lt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ScanAngle:= ScanAngle+</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">180</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i:= Round(ScanAngle);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> i=</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">45</FONT><FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><FONT FACE="Consolas" SIZE="2"> twDesTypeString:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'Diagonal TA'</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> i=</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">135</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><FONT FACE="Consolas" SIZE="2"> twDesTypeString:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'Diagonal GA'</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> (twDesScanType </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>in</B></FONT><FONT FACE="Consolas" SIZE="2"> [snFreescan]) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> (</FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>not</B></FONT><FONT FACE="Consolas" SIZE="2"> twDesVaryingAxis[Beam]) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twDesScanType:= snGenericHorizontal;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> (((twDesScanType </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>in</B></FONT><FONT FACE="Consolas" SIZE="2"> [snFreescan,snGenericProfile,snUndefined,snPDD]) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> wGenericToPDD </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> (GetDistance(twVector_ICD_cm[Stop],twVector_ICD_cm[Start])&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">3</FONT><FONT FACE="Consolas" SIZE="2">)) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>or</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (twDesScanType=snFanLine)) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> mAxis:= Inplane </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> Beam </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wRefPoint.m[mAxis]:= CalcRefPos(mAxis);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> wGenericToPDD </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twDesScanType&nbsp; := snPDD;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twDesTypeString:= ApplyAliasList(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'PDD'</FONT><FONT FACE="Consolas" SIZE="2">);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> twDesScanType </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>in</B></FONT><FONT FACE="Consolas" SIZE="2"> [snFreescan,snPDD] </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twCoordinates[i].m[Beam&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]:= DistanceToRefPoint(twCoordinates[i])*Sign(twCoordinates[i].m[Beam]);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twCoordinates[i].m[Inplane&nbsp;&nbsp; ]:= wRefPoint.m[Inplane&nbsp;&nbsp; ];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twCoordinates[i].m[Crossplane]:= wRefPoint.m[Crossplane];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twVector_ICD_cm[Start]:= twCoordinates[twDataFirst];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twVector_ICD_cm[Stop ]:= twCoordinates[twDataLast];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>case</B></FONT><FONT FACE="Consolas" SIZE="2"> twDesScanType </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>of</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; snGT,snAB,snPDD: </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mAxis:= twcMeasAxis(Ord(twDesScanType));</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twPosCm[i]:= twCoordinates[i].m[mAxis]/twPosScaling;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; snFanLine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> mAxis:= Inplane </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> CrossPlane </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wRefPoint.m[mAxis]:= twVector_ICD_cm[Start].m[mAxis];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twPosCm[i]:= DistanceToRefPoint(twCoordinates[i])*Sign(twCoordinates[i].m[Beam]);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; snGenericHorizontal,</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; snFreeScan&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wRefPoint:= twVector_ICD_cm[Start];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twPosCm[i]:= DistanceToRefPoint(twCoordinates[i]);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; snAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twPosCm[i]:= wUserAxisSign[CrossPlane]*Sign(twCoordinates[i].m[Crossplane])*DistanceToRefPoint(twCoordinates[i]);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{case}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twStepSizeCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := Max(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0.0001</FONT><FONT FACE="Consolas" SIZE="2">,GetDistance(twCoordinates[twDataLast],twCoordinates[twDataFirst])/Max(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">,Pred(twPoints)));</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; FScanType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := twDesScanType;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; CheckDataOrdering;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{sets also twPosFirst and twPosLast}</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; Linac&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := StrTrimA(Linac,csComplete-[</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'a'</FONT><FONT FACE="Consolas" SIZE="2">..</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'z'</FONT><FONT FACE="Consolas" SIZE="2">,</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'A'</FONT><FONT FACE="Consolas" SIZE="2">..</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'Z'</FONT><FONT FACE="Consolas" SIZE="2">,</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'0'</FONT><FONT FACE="Consolas" SIZE="2">..</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'9'</FONT><FONT FACE="Consolas" SIZE="2">,</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'-'</FONT><FONT FACE="Consolas" SIZE="2">,</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'_'</FONT><FONT FACE="Consolas" SIZE="2">]-[AsciiSP]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//use ansi version of StrTrim</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; i:= PosCharA(AsciiSP,Linac);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//use ansi version</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> i&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Delete(Linac,i,Length(Linac)-i+</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; Linac:= StrTrimA(Linac,[</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">':'</FONT><FONT FACE="Consolas" SIZE="2">]);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> Length(Linac)=</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Linac&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'linac'</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twDevice&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := Linac;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanTypeString&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := twDesTypeString;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFileName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := FileName;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twValid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := FParseOk;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twIsDiagonal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := ScanAngle;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twIsGamma&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twIsRelative&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twInFieldAreaOk&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFastScan&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twFilterPoints&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twLinSlope&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAbsNormPosCm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twAbsNormConfig&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twLocalPeak&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := False;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twRefNormFactor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twScanDevice&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">''</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; vmax&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := twData[</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; wMeasDeviceInfo.twDeviceName:= AnsiReplaceStr(wMeasDeviceInfo.twDeviceName,AsciiSP,</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">''</FONT><FONT FACE="Consolas" SIZE="2">);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> Pos(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'film'</FONT><FONT FACE="Consolas" SIZE="2">,LowerCase(wDetectorInfo.twDetType))&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twFilmData:= True;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> wResampleData </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Resample(ResampleGridSize,dsMeasured,dsMeasured);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> twData[i]&gt;vmax </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vmax&nbsp;&nbsp;&nbsp; := twData[i];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twMaxArr:= i;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; e:= </FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> (vmax&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">0</FONT><FONT FACE="Consolas" SIZE="2">) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> (ScanType </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>in</B></FONT><FONT FACE="Consolas" SIZE="2"> twcHoriScans) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> ((vmax&lt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">10</FONT><FONT FACE="Consolas" SIZE="2">) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>or</B></FONT><FONT FACE="Consolas" SIZE="2"> (vmax&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">32000</FONT><FONT FACE="Consolas" SIZE="2">)) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e&nbsp;&nbsp; := NiceStep(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">100</FONT><FONT FACE="Consolas" SIZE="2">/vmax);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vmax:= e*vmax;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> e&lt;&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">1</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>begin</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>for</B></FONT><FONT FACE="Consolas" SIZE="2"> i:= twDataFirst </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>to</B></FONT><FONT FACE="Consolas" SIZE="2"> twDataLast </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>do</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twData[i]:= e*twData[i];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StatusMessage(Format(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'%s data scaled with factor %0.3f'</FONT><FONT FACE="Consolas" SIZE="2">,[twDataHistoryStg,e]));</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twDataHistoryStg:= Format(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'%0.3f*%s'</FONT><FONT FACE="Consolas" SIZE="2">,[e,twDataHistoryStg]);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMaxPosCm:= twPosCm[twMaxArr];</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twMaxValue:= Max(twcMinNormVal,vmax);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008080" SIZE="2">{$IFDEF WELLHOFER_DUMPDATA}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; DumpData(</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">'PrepareProfile'</FONT><FONT FACE="Consolas" SIZE="2">);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008080" SIZE="2">{$ENDIF}</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; FastScan;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; twCurveIDstring:= MakeCurveName(False,True);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//needs preliminary analysis of FastScan</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> twFileName=</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">''</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; twFilename:= twCurveIDstring;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; SetArrayScanRefOk;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>//check whether this measurement accepts a array device data set as reference</I></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> FArrayScanRefOk </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> (wDetectorInfo.twDetName=twcDefUnknown) </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wDetectorInfo.twDetName:= wMeasDeviceInfo.twDeviceName;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; ClearCurve(dsCalculated,True);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; ClearCurve(dsBuffer&nbsp;&nbsp;&nbsp; ,True);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> FAutoLoadRef </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; LoadReference</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> TakeReferenceOrg </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; TakeReferenceOrg</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>else</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; ClearCurve(dsReference,True);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>if</B></FONT><FONT FACE="Consolas" SIZE="2"> Warning&lt;&gt;</FONT><FONT FACE="Consolas" COLOR="#0000FF" SIZE="2">''</FONT><FONT FACE="Consolas" SIZE="2"> </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>then</B></FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp;&nbsp;&nbsp; StatusMessage(LastMessage);</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; Result:= FParseOk </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>and</B></FONT><FONT FACE="Consolas" SIZE="2"> IsValid;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">&nbsp; </FONT><FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">;</FONT><BR>
<FONT FACE="Consolas" SIZE="2">Dec(FActiveCnt);</FONT><BR>
<FONT FACE="Consolas" COLOR="#000080" SIZE="2"><B>end</B></FONT><FONT FACE="Consolas" SIZE="2">; </FONT><FONT FACE="Consolas" COLOR="#008000" SIZE="2"><I>{~prepareprofile}</I></FONT><BR>
<BR>
<BR>
<BR>
<FONT FACE="Arial" SIZE="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </FONT><FONT FACE="Arial" SIZE="1"><I><STRIKE>back to top</STRIKE></I></FONT><FONT FACE="Arial" COLOR="#800000" SIZE="2"><I>linkTarget=detailslist}
</I></FONT>
</BODY></HTML>
